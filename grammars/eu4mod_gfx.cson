name: 'EU4 .gfx'
scopeName: 'source.eu4mod.gfx'
type: 'tree-sitter'
parser: 'tree-sitter-eu4mod'

# File's extensions managed
fileTypes: [
  'gfx'
]

scopes:

  'comment': 'comment.line.number-sign.eu4mod.gfx'

  # Types
  'gfx_types_definition > identifier': 'support.constant.eu4mod.gfx'
  'gfx_types_definition > assign_equal': 'keyword.operator.assign.eu4mod.gfx'
  'gfx_types_definition > statement > identifier': 'variable.eu4mod.gfx'

  # Type
  'gfx_type_definition > identifier': 'entity.name.type.eu4mod.gfx'
  'gfx_type_definition > assign_equal': 'keyword.operator.assign.eu4mod.gfx'
  'gfx_type_definition > statement > identifier': 'variable.eu4mod.gfx'

  # Value
  'statement > string': 'string.quoted.double.eu4mod.gfx'
  'statement > number': 'constant.numeric.eu4mod.gfx'

  # Temporary color unhandled content :
  'debug_name': 'variable.eu4mod.gfx'

  # For debug comment / decomment :
  #'debug_loop': 'invalid.deprecated.eu4mod.gfx'
  #'debug_name': 'invalid.illegal.eu4mod.gfx'

# One Dark colors association :
#
# comment (grey)
# string (green)
# support.function / support.type / string.regexp (cyan)
# entity.name.function / entity.name.section (blue)
# entity.name.type / support.class (gold)
# constant / support.constant (orange)
# variable / support.variable (red)
# keyword / storage (pink)
